import content from './content';
import dataTypes from './dataTypes';
import isRelevant from './isRelevant';

const styleParams = [
  'isStore',
  'showAddToCartSection',
  'canUseWatermark',
  'galleryLayout',
  'slideshowLoop',
  'isAutoSlideshow',
  'autoSlideshowInterval',
  'slideshowInfoSize',
  'playButtonForAutoSlideShow',
  'scrollDirection',
  'isVertical',
  'isRTL',
  'allowTitle',
  'allowDescription',
  'allowSlideshowCounter',
  'titlePlacement',
  'hoveringBehaviour',
  'imageResize',
  'galleryImageRatioFromWix',
  'gallerySliderImageRatio',
  'galleryThumbnailsAlignment',
  'thumbnailSize',
  'gridStyle',
  'gallerySize',
  'numberOfImagesPerRow',
  'numberOfImagesPerCol',
  'thumbnailSpacings',
  'imageMargin',
  'galleryMargin',
  'floatingImages',
  'collageDensity',
  'enableInfiniteScroll',
  'loadMoreAmount',
  'magicLayoutSeed',
  'scrollSnap',
  'itemClick',
  'useWatermark',
  'watermarkOpacity',
  'watermarkSize',
  'watermarkDock',
  'allowDownload',
  'allowSocial',
  'loveButton',
  'loveCounter',
  'itemOpacity',
  'itemIconColorSlideshow',
  'itemIconColor',
  'arrowsSize',
  'arrowsColor',
  'arrowsPosition',
  'overlayAnimation',
  'imageHoverAnimation',
  'itemFont',
  'itemFontColor',
  'itemFontSlideshow',
  'itemFontColorSlideshow',
  'itemDescriptionFont',
  'itemDescriptionFontColor',
  'itemDescriptionFontSlideshow',
  'itemDescriptionFontColorSlideshow',
  'galleryHorizontalAlign',
  'galleryVerticalAlign',
  'textBoxFillColor',
  'calculateTextBoxHeightMode',
  'textBoxHeight',
  'textImageSpace',
  'textBoxBorderRadius',
  'textBoxBorderWidth',
  'textBoxBorderColor',
  'textsVerticalPadding',
  'textsHorizontalPadding',
  'titleDescriptionSpace',
  'useCustomButton',
  'customButtonText',
  'customButtonFontForHover',
  'customButtonFontColorForHover',
  'customButtonFont',
  'customButtonFontColor',
  'customButtonColor',
  'customButtonBorderWidth',
  'customButtonBorderColor',
  'customButtonBorderRadius',
  'loadMoreButtonText',
  'loadMoreButtonFont',
  'loadMoreButtonFontColor',
  'loadMoreButtonColor',
  'loadMoreButtonBorderWidth',
  'loadMoreButtonBorderColor',
  'loadMoreButtonBorderRadius',
  'imageInfoType',
  'itemBorderWidth',
  'itemBorderColor',
  'itemBorderRadius',
  'itemEnableShadow',
  'itemShadowOpacityAndColor',
  'itemShadowBlur',
  'itemShadowDirection',
  'itemShadowSize',
  'imageLoadingMode',
  'imageLoadingColor',
  'expandAnimation',
  'scrollAnimation',
  'oneColorAnimationColor',
  'allowTitleExpand',
  'allowDescriptionExpand',
  'allowLinkExpand',
  'expandInfoPosition',
  'defaultShowInfoExpand',
  'allowFullscreenExpand',
  'fullscreenLoop',
  'bgColorExpand',
  'actionsColorExpand',
  'titleFontExpand',
  'titleColorExpand',
  'descriptionFontExpand',
  'descriptionColorExpand',
  'galleryAlignExpand',
  'addToCartBackColorExpand',
  'addToCartFontExpand',
  'addToCartColorExpand',
  'addToCartBorderWidth',
  'addToCartBorderColor',
  'addToCartButtonText',
  'imageQuality',
  'usmToggle',
  'usm_a',
  'usm_r',
  'usm_t',
  'videoPlay',
  'videoSound',
  'videoSpeed',
  'videoLoop',
];

const settingsManager = styleParams.reduce((obj, styleParam) => ({
  ...obj,
  [styleParam]: {
    isRelevant: isRelevant[styleParam],
    ...content[styleParam],
    ...dataTypes[styleParam],
  }
}), {});

export {
  settingsManager
}